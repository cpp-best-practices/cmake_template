# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.

name: "CodeQL"

on:
  pull_request:
    # The branches below must be a subset of the `push` section
    branches:
      - develop
      - main

  push:
    branches:
      - develop
      - main

  schedule:
    - cron: "38 0 * * 5"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
        compiler:
          # you can specify the version after `-` like "llvm-13.0.0".
          - gcc-11
        generator:
          - "Ninja Multi-Config"
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support
        language:
          - cpp
        packaging_maintainer_mode:
          - ON

    steps:
      - name: Checkout repository
        uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Setup Cache
        uses: ./.github/actions/setup_cache
        with:
          build_type: ${{ matrix.build_type }}
          compiler: ${{ matrix.compiler }}
          generator: ${{ matrix.generator }}
          packaging_maintainer_mode: ${{ matrix.packaging_maintainer_mode }}

      - name: Project Name
        uses: cardinalby/export-env-action@v2
        with:
          envFile: ".github/constants.env"

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          ccache: true
          clangtidy: false
          cmake: true
          compiler: ${{ matrix.compiler }}
          cppcheck: false
          gcovr: false
          ninja: true
          opencppcoverage: false
          vcpkg: false
          vcvarsall: ${{ contains(matrix.os, 'windows') }}

        # make sure coverage is only enabled for Debug builds, since it sets -O0 to make sure coverage
        # has meaningful results
      - name: Configure CMake
        run: |
          cmake -B ./build -S . \
            -D${{ env.PROJECT_NAME }}_ENABLE_COVERAGE:BOOL=${{ matrix.build_type == 'Debug' }} \
            -D${{ env.PROJECT_NAME }}_PACKAGING_MAINTAINER_MODE:BOOL=${{ matrix.packaging_maintainer_mode }} \
            -DCMAKE_BUILD_TYPE:STRING=${{ matrix.build_type }} \
            -G "${{ matrix.generator }}"

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      - name: Build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: |
          cmake --build ./build --config ${{ matrix.build_type }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
